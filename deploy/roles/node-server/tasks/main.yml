---
- name: install pnpm needs
  apt:
    pkg:
      - "ca-certificates"
      - "gnupg"
      - "curl"
  become: true
- name: Check if node key exists
  stat:
    path: /usr/share/keyrings/nodesource.gpg
  register: stat_result_nodesource
- name: try initial node key set
  shell: |
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/nodesource.gpg
  become: true
  ignore_errors: true
  when: not stat_result_nodesource.stat.exists
- name: try overwrite node key set
  shell: |
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/nodesource.gpg --batch --yes
  become: true
  ignore_errors: true
- name: ensure node gpg key is in place
  shell: |
    echo "deb [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
  become: true
  ignore_errors: true
- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
  become: true
- name: install nodejs
  apt:
    pkg:
      - "nodejs"
      - "build-essential"
  become: true
- name: Check if pnpm exists
  stat:
    path: /home/{{uname}}/.local/share/pnpm/pnpm
  register: stat_result_pnpm
- name: ensure pnpm is installed
  shell: |
    curl -fsSL https://get.pnpm.io/install.sh | sh -
  ignore_errors: true
  when: not stat_result_pnpm.stat.exists
- name: Check if timberbuddy git repo exists
  stat:
    path: /home/{{uname}}/timberbuddy/.git
  register: stat_result_tb_git
- name: set upstream and fetch
  shell: |
    git remote set-url origin https://jesssullivan:{{github_pat}}@github.com/jesssullivan/timberbuddy
    git fetch
    git switch {{branch}}
    git pull
  args:
    chdir: /home/{{uname}}/timberbuddy/
  when: stat_result_tb_git.stat.exists
- name: clone timberbuddy repo
  shell: |
    gh repo clone Jesssullivan/timberbuddy
  when: not stat_result_tb_git.stat.exists
- name: ensure node-gyps are installed globally
  shell: |
    export PNPM_HOME="/home/{{uname}}/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
    /home/{{uname}}/.local/share/pnpm/pnpm setup
    /home/{{uname}}/.local/share/pnpm/pnpm i -g add pnpm
    /home/{{uname}}/.local/share/pnpm/pnpm install -g node-gyp
    /home/{{uname}}/.local/share/pnpm/pnpm install -g node-pre-gyp
  args:
    chdir: /home/{{uname}}/timberbuddy/
  ignore_errors: true
- name: ensure node depends are installed
  command: /home/{{uname}}/.local/share/pnpm/pnpm install
  args:
    chdir: /home/{{uname}}/timberbuddy/
- name: build timberbuddy
  command: /home/{{uname}}/.local/share/pnpm/pnpm run build
  args:
    chdir: /home/{{uname}}/timberbuddy/
- name: Ensure Timber Buddy control interface service is in place
  template:
    src: TimberBuddyInterfaceService.service.j2
    dest: /etc/systemd/system/TimberBuddyInterfaceService.service
    mode: 0644
  become: yes
- name: Ensure Timber Buddy Interface Service is fully stopped
  systemd:
    name: TimberBuddyInterfaceService
    state: stopped
    enabled: true
  become: yes
- name: force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true
- name: Ensure Timber Buddy Interface Service is running
  systemd:
    name: TimberBuddyInterfaceService
    state: started
    enabled: true
  become: yes
- name: reboot the machine
  reboot:
    reboot_timeout: 300
  become: true